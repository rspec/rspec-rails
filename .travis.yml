language: ruby

sudo: false

# We deviate from the rspec-dev cache setting here.
#
# Travis has special bundler support where it knows to run `bundle clean`
# before backing up the bundle so it doesn't grow indefinitely.
#
# For the other repos we changed to specifying the directory specifically to
# avoid the `bundle clean` travis was doing, because Myron found that, when
# running one of the a build for one repo, the "run the rspec-core and
# rspec-rails spec suites" parts would take a while because it would _always_
# have to install fresh gems (they weren't in the cache). This was happening
# because travis was running `bundle clean` (due to the previous `cache:
# bundler` config) against one repo which was was pruning gems installed for
# the other repos.
#
# In our case, we aren't running the spec suites for the other repos so the
# original `cache: bundler` is a better option.
cache: bundler

bundler_args: "--binstubs --without documentation --path ../bundle --retry=3 --jobs=3"

before_install: "script/clone_all_rspec_repos"

before_script:
  # Rails 4.x complains with a bundler rails binstub in PROJECT_ROOT/bin/
  - rm -f bin/rails
  - bundle exec rails --version

script: "script/run_build 2>&1"

rvm:
  - 1.8.7
  - 2.3.0
  - 2.2
  - 2.1
  - 2.0.0
  - 1.9.3
  - 1.9.2

env:
  - RAILS_VERSION='~> 4.2.0'
  - RAILS_VERSION=4-2-stable
  - RAILS_VERSION='~> 4.1.0'
  - RAILS_VERSION=4-1-stable
  - RAILS_VERSION='~> 4.0.4'
  - RAILS_VERSION=4-0-stable
  - RAILS_VERSION='~> 3.2.17'
  - RAILS_VERSION=3-2-stable
  - RAILS_VERSION='~> 3.1.12'
  - RAILS_VERSION='~> 3.0.20'

matrix:
  include:
    # Rails 5.x only supports 2.2+
    - rvm: 2.2.2
      env: RAILS_VERSION=master
    - rvm: 2.2.2
      env: RAILS_VERSION=5.0.0.beta3
    - rvm: 2.3.0
      env: RAILS_VERSION=master
    - rvm: 2.3.0
      env: RAILS_VERSION=5.0.0.beta3
  exclude:
    # 3.0.x is not supported on MRI 2.0+
    - rvm: 2.0.0
      env: RAILS_VERSION='~> 3.0.20'
    - rvm: 2.1
      env: RAILS_VERSION='~> 3.0.20'
    - rvm: 2.2
      env: RAILS_VERSION='~> 3.0.20'
    - rvm: 2.3.0
      env: RAILS_VERSION='~> 3.0.20'
    # 4.x is not supported on MRI ruby-1.8.7 or 1.9.2
    - rvm: 1.8.7
      env: RAILS_VERSION='~> 4.0.4'
    - rvm: 1.9.2
      env: RAILS_VERSION='~> 4.0.4'
    - rvm: 1.8.7
      env: RAILS_VERSION=4-0-stable
    - rvm: 1.9.2
      env: RAILS_VERSION=4-0-stable
    - rvm: 1.8.7
      env: RAILS_VERSION='~> 4.1.0'
    - rvm: 1.9.2
      env: RAILS_VERSION='~> 4.1.0'
    - rvm: 1.8.7
      env: RAILS_VERSION=4-1-stable
    - rvm: 1.9.2
      env: RAILS_VERSION=4-1-stable
    - rvm: 1.8.7
      env: RAILS_VERSION='~> 4.2.0'
    - rvm: 1.9.2
      env: RAILS_VERSION='~> 4.2.0'
    - rvm: 1.8.7
      env: RAILS_VERSION=4-2-stable
    - rvm: 1.9.2
      env: RAILS_VERSION=4-2-stable
    # MRI 2.2+ is not supported on a few versions
    - rvm: 2.2
      env: RAILS_VERSION='~> 3.1.12'
    - rvm: 2.3.0
      env: RAILS_VERSION='~> 3.1.12'
  allow_failures:
    - rvm: 2.2.2
      env: RAILS_VERSION=master
    - rvm: 2.3.0
      env: RAILS_VERSION=master
  fast_finish: true

branches:
  only:
    - master
    - /^\d+-\d+-maintenance$/
